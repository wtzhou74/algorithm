- 取指定数目的所有数的组合  ===> for (i = s), 即一个个相对于当前元素往下取， 直到取到符合长度的sol 
	- sol.length == n  ==> return
	- 这里backtrack靠索引 i 的变化来达到
		====> BinaryWatch.java
		====> LetterCasePermutation.java
		
- 任意数目子集的组合   ===> sol的长度是 [1, n], 而且order matters, "AB", "BA" 不一样  ===> 每个字符
	- 都有两种情况， 取/不取    ===> 借助 visited[] ===> backtrack 就得靠恢复当前元素的 visited值以及元素本身了
		====> LetterTilePossibilities.java
		
		

对递归的理解：
===> BraceExpansion.java