points = int[][] points = new int[][] {
			{0, 0},
			{94911151, 94911150},
			{94911152, 94911151}
		};
double slop = (points[j][0] - points[i][0]) / (double)(points[j][1] - points[i][1]);
===> float will get the three points on the same line, since the slop will be 1.0f  =====> MaxPointsOnALine.java

二元方程 - 抛物线; -> 开口方向由a决定， 顶点值在 -b/(2*a)上  ===> SortedTransformedArray.java

涉及到2个或3个数相加跟Target的关系，根据情况可以考虑反着来 ==> target - nums[i]  ===> Three3SumSmaller.java
===> a但有的情况，比如 "距离"， 就得先 SUM, 再TwoPointers； abs(sum-target)  ===> Three3SumCloset.java

Random random = new Random(); random.nextInt() ===> ShuffleAnArray.java

（a + b）%c == (a%c + b%c)%c
[1,2,3,4,5]d的pairs, == pairs([1,2,3,4]) + 1  ==> 累加和结果（每次+1）； 也是n-1等差的结果  ==> PairsOfSongsWithTotalDurationsDivisibleBy60.java